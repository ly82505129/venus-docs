(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{334:function(t,s,e){t.exports=e.p+"assets/img/venus-cluster.39d38e43.png"},429:function(t,s,e){"use strict";e.r(s);var a=e(54),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"background"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#background"}},[t._v("#")]),t._v(" Background")]),t._v(" "),a("p",[t._v("Starting filecoin mining could be a daunting task given not only the large initial hardware and filecoin collateral "),a("a",{attrs:{href:"https://filscan.io/calculator",target:"_blank",rel:"noopener noreferrer"}},[t._v("investment"),a("OutboundLink")],1),t._v(" but also the entailing operation commitment. With ideas of security, ease of use and distributed mining pool in mind, Venus implementation of filecoin will help miners turn, what community say, "),a("a",{attrs:{href:"https://filecoinproject.slack.com/archives/CEGN061C5/p1610810730117900?thread_ts=1610809298.116800&cid=CEGN061C5",target:"_blank",rel:"noopener noreferrer"}},[t._v("a full time job"),a("OutboundLink")],1),t._v(" into a serious hobby. Hope this tutorial will get you started mining in no time!")]),t._v(" "),a("h2",{attrs:{id:"how-mining-works"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-mining-works"}},[t._v("#")]),t._v(" How mining works")]),t._v(" "),a("p",[t._v("There are two ways of getting started with mining using Venus.")]),t._v(" "),a("ol",[a("li",[t._v("Deploy minimum hardware and gain access to a publicly hosted shared venus modules."),t._v(" (The rest of this tutorial will walk you through this way of deploying venus mining operation)")]),t._v(" "),a("li",[t._v("Deploy all required hardware and venus modules by yourself. (See "),a("RouterLink",{attrs:{to:"/guide/How-To-Deploy-MingPool.html"}},[t._v("this")]),t._v(" tutorial to learn more)")],1)]),t._v(" "),a("p",[t._v("After following the rest of the trutorial and successful deployment, you can start pledging sectors, grow power and evantually obtain block rewards through your contribution to the network's storage capacity!")]),t._v(" "),a("h2",{attrs:{id:"introducing-venus-modules"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introducing-venus-modules"}},[t._v("#")]),t._v(" Introducing venus modules")]),t._v(" "),a("p",[t._v("Depending on its role in a mining cluster, modules could be loosely broken down into two category: shared and independent. Shared modules could be thought as the plumbings of what you need to start sealing sectors. Most of the dealings with the blockchain like chain synchronizations, sending messages, winning a block and etc are handled by the shared modules. The idea is that many miners could all use a set of shared modules, thus reducing overhead in maintainence. Independent modules handles sealing and proving of your sectors, where you will be spend most of your time if you choose to use a publicly hosted shared venus modules. Note also that venus-wallet module could be deployed as either shared or independent.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("name")]),t._v(" "),a("th",[t._v("role")]),t._v(" "),a("th",[t._v("shared/independent")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/filecoin-project/venus",target:"_blank",rel:"noopener noreferrer"}},[t._v("venus"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("daemon for chain interactions")]),t._v(" "),a("td",[t._v("shared")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/filecoin-project/venus-miner",target:"_blank",rel:"noopener noreferrer"}},[t._v("venus-miner"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("block winning and proving")]),t._v(" "),a("td",[t._v("shared")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/filecoin-project/venus-messager",target:"_blank",rel:"noopener noreferrer"}},[t._v("venus-messager"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("chain message management")]),t._v(" "),a("td",[t._v("shared")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/filecoin-project/venus-auth",target:"_blank",rel:"noopener noreferrer"}},[t._v("venus-auth"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("utility for authorized use of shared modules")]),t._v(" "),a("td",[t._v("shared")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/ipfs-force-community/venus-gateway",target:"_blank",rel:"noopener noreferrer"}},[t._v("venus-gateway"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("utility for controlled access point of shared modules")]),t._v(" "),a("td",[t._v("shared")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/filecoin-project/venus-wallet",target:"_blank",rel:"noopener noreferrer"}},[t._v("venus-wallet"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("addresses/keys management")]),t._v(" "),a("td",[t._v("shared/independent")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/filecoin-project/venus-sealer",target:"_blank",rel:"noopener noreferrer"}},[t._v("venus-sealer"),a("OutboundLink")],1),t._v(", "),a("a",{attrs:{href:"https://github.com/filecoin-project/venus-sealer",target:"_blank",rel:"noopener noreferrer"}},[t._v("venus-worker"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("job scheduling, sealing and proving")]),t._v(" "),a("td",[t._v("independent")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://github.com/filecoin-project/venus-market",target:"_blank",rel:"noopener noreferrer"}},[t._v("venus-market"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("deal making")]),t._v(" "),a("td",[t._v("independent")])])])]),t._v(" "),a("h2",{attrs:{id:"mining-architecture"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mining-architecture"}},[t._v("#")]),t._v(" Mining architecture")]),t._v(" "),a("p",[t._v("Diagram below illustrates how venus modules interacts with one and another.")]),t._v(" "),a("p",[a("img",{attrs:{src:e(334),alt:"venus-cluster"}})]),t._v(" "),a("h2",{attrs:{id:"hardware-requirements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hardware-requirements"}},[t._v("#")]),t._v(" Hardware requirements")]),t._v(" "),a("p",[t._v("Learn more about hardware requirements "),a("a",{attrs:{href:"https://docs.filecoin.io/mine/hardware-requirements/#general-hardware-requirements",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),a("OutboundLink")],1),t._v(". Check out this "),a("a",{attrs:{href:"https://medium.com/zeethio/filecoin-solo-mining-rig-a549e7fa230d",target:"_blank",rel:"noopener noreferrer"}},[t._v("solo mining guide"),a("OutboundLink")],1),t._v(" by one of the comunity members. As a sidetone, everyone may have different hardware setups, and it is recommended that you "),a("a",{attrs:{href:"#finding-optimal-configurations"}},[t._v("find your own optimal configurations")]),t._v(" through trial and errors.")]),t._v(" "),a("h2",{attrs:{id:"pre-requisites"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pre-requisites"}},[t._v("#")]),t._v(" Pre-requisites")]),t._v(" "),a("p",[t._v("Before diving into deployment of your mining operation, please make sure you go through the following steps.")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("It is recommended that you test your setup in calibration network before deploying on mainnet.")])]),t._v(" "),a("h3",{attrs:{id:"setup-your-permanent-storage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setup-your-permanent-storage"}},[t._v("#")]),t._v(" Setup your permanent storage")]),t._v(" "),a("p",[t._v("Choose a network file system that you are familiar with (NFS for example) and deploy your storage cluster.")]),t._v(" "),a("h3",{attrs:{id:"get-your-account-setup-in-shared-modules"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-your-account-setup-in-shared-modules"}},[t._v("#")]),t._v(" Get your account setup in shared modules")]),t._v(" "),a("p",[t._v("There are two ways to have your account setup.")]),t._v(" "),a("h4",{attrs:{id:"for-miners-connecting-to-shared-modules"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-miners-connecting-to-shared-modules"}},[t._v("#")]),t._v(" For miners connecting to shared modules")]),t._v(" "),a("p",[t._v("If you are trying to connect to a hosted shared venus modules, "),t._v(" contact admin of said service and have them set it up for you.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("venus-wallet can be deployed as either a shared or independent module depend on your security requirement.")])]),t._v(" "),a("h4",{attrs:{id:"for-admins-of-shared-modules"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-admins-of-shared-modules"}},[t._v("#")]),t._v(" For admins of shared modules")]),t._v(" "),a("p",[t._v("If you are an admin hosting shared venus modules, use the following command to create an account for your sealer-cluster.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If storage provider already have a <MINER_ID>")]),t._v("\n$ ./venus-auth user "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" --name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ACCOUNT_NAME"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --miner "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("MINER_ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If storage provider doesn't have a <MINER_ID> yet, leave out --miner flag and use 'updateUser' command when user inited their miner id")]),t._v("\n$ ./venus-auth user "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" --name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ACCOUNT_NAME"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n$ ./venus-auth user update --name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ACCOUNT_NAME"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --miner "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("MINER_ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The returned token is what miner have to add into their config file in order to gain access to your shared modules")]),t._v("\n$ ./venus-auth token gen --perm "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ACCOUNT_NAME"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("AUTH_TOKEN_FOR_ACCOUNT_NAME"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("Update user information if necessary.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("./venus-auth user update --name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ACCOUNT_NAME"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --miner"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("MINER_ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h3",{attrs:{id:"software-dependencies"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#software-dependencies"}},[t._v("#")]),t._v(" Software dependencies")]),t._v(" "),a("p",[t._v("You will need to have the following software installed before running venus.")]),t._v(" "),a("h4",{attrs:{id:"build-tools"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#build-tools"}},[t._v("#")]),t._v(" Build tools")]),t._v(" "),a("p",[t._v("Ubuntu/Debian:")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" mesa-opencl-icd ocl-icd-opencl-dev gcc "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" bzr jq pkg-config "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" clang build-essential hwloc libhwloc-dev "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" -y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" upgrade -y\n")])])]),a("p",[t._v("CentOS:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" gcc bzr jq pkgconfig clang llvm mesa-libGL-devel opencl-headers ocl-icd ocl-icd-devel hwloc-devel\n")])])]),a("h3",{attrs:{id:"rust"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rust"}},[t._v("#")]),t._v(" Rust")]),t._v(" "),a("p",[t._v("Install "),a("a",{attrs:{href:"https://rustup.rs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("rustup"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" --proto "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'=https'")]),t._v(" --tlsv1.2 -sSf https://sh.rustup.rs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v("\n")])])]),a("h4",{attrs:{id:"go"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#go"}},[t._v("#")]),t._v(" Go")]),t._v(" "),a("p",[t._v("To build venus, you need a working installation of "),a("a",{attrs:{href:"https://golang.org/dl/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Go 1.16 or higher"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" -c https://golang.org/dl/go1.16.2.linux-amd64.tar.gz -O - "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -xz -C /usr/local\n")])])]),a("p",[t._v("Add "),a("code",[t._v("/usr/local/go/bin")]),t._v(" to your path and setup "),a("code",[t._v("Go")]),t._v(" env. For most Linux distributions you can run something like:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"export PATH='),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$PATH")]),t._v(':/usr/local/go/bin"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" ~/.bashrc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" ~/.bashrc\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# setup go env")]),t._v("\ngo "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("env")]),t._v(" -w "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOPROXY")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("https://goproxy.io,direct\ngo "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("env")]),t._v(" -w "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GO111MODULE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("on\n")])])]),a("p",[t._v("See the "),a("a",{attrs:{href:"https://golang.org/doc/install",target:"_blank",rel:"noopener noreferrer"}},[t._v("official Golang installation instructions"),a("OutboundLink")],1),t._v(" if you get stuck.")]),t._v(" "),a("h2",{attrs:{id:"install-venus-wallet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-venus-wallet"}},[t._v("#")]),t._v(" Install venus-wallet")]),t._v(" "),a("p",[t._v("Download and compile the source code of venus-wallet.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/filecoin-project/venus-wallet.git\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# change directory to venus-wallet")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" venus-wallet\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("RELEASE_TAG"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("For participants in incubation program, please use "),a("code",[t._v("incubation")]),t._v(" branch by "),a("code",[t._v("git checkout incubation")]),t._v(". To recompile using latest code in "),a("code",[t._v("incuvation")]),t._v(" branch, do "),a("code",[t._v("git pull")]),t._v(" and then "),a("code",[t._v("make")]),t._v(".")])]),t._v(" "),a("p",[t._v("Run venus-wallet module in background.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nohup")]),t._v(" ./venus-wallet run "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" wallet.log "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("Use "),a("code",[t._v("tail -f wallet.log")]),t._v(" to monitor wallet log.")])]),t._v(" "),a("p",[t._v("Setup a password for your venus-wallet.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ ./venus-wallet setpwd\nPassword:******\nEnter Password again:******\nPassword "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" successfully\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("Please keep backups of your password and store them properly or you will lose contorl of your wallet.")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("When restarting your wallet, manuually unlock your wallet or you wallet won't be able to sign any messages during sealing or other tasks.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ ./venus-wallet unlock\nPassword:\n")])])]),a("p",[t._v("Use "),a("code",[t._v("--password")]),t._v(" for auto unlocking after running.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ ./venus-wallet run --password\n")])])]),a("p",[t._v("Check current state your wallet.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ ./venus-wallet lock-state\nwallet state: unlocked\n")])])])]),t._v(" "),a("p",[t._v("Generate owner and worker addresses. (If you don't have an existing miner id)")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ ./venus-wallet new bls\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("OWNER_ADDRESS"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n$ ./venus-wallet new bls\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("WORKER_ADDRESS"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("If you are testing or Calibration, you have to fund all your addresses with test coins from faucets. For calibration, use this "),a("a",{attrs:{href:"https://faucet.calibration.fildev.network/funds.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("faucet"),a("OutboundLink")],1),t._v(".")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("Use "),a("code",[t._v("./venus-wallet import")]),t._v(" command for importing addresses from private keys.")])]),t._v(" "),a("p",[t._v("Change "),a("code",[t._v("[APIRegisterHub]")]),t._v(" section of  "),a("code",[t._v("~/.venus_wallet/config.toml")]),t._v(" using the credential you get from shared module admin.")]),t._v(" "),a("div",{staticClass:"language-toml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-toml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("APIRegisterHub")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("RegisterAPI")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ip4/<IP_ADDRESS_OF_VENUS_GATEWAY>/tcp/45132"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Token")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<AUTH_TOKEN_FOR_VENUS_WALLET>"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("SupportAccounts")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<ACCOUNT_NAME>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("Make sure above 3 params are correctly set, or connection to venus shared modules will fail.")])]),t._v(" "),a("p",[t._v("Restart venus-wallet so that the changes takes into effect.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# grep [PID] of venus-wallet process")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -ef "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" wallet\nroot   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6704")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.3")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2361236")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("43148")]),t._v(" pts/2   Sl   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(":33   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(":18 ./venus-wallet run\nroot   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8029")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("112828")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("952")]),t._v(" pts/2    S+   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(":46   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(":00 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" --color"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("auto venus-wallet\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kill the process and restart")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" -9 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("PID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nohup")]),t._v(" ./venus-wallet run "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" wallet.log "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n")])])]),a("p",[t._v("You should see logs close to the following indicating successful connection to "),a("code",[t._v("venus-gateway")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-07-12T15:14:12.457+0800    INFO    wallet_event    wallet_event/listenevent.go:197 connect to server fcf714b2-eeb6-498b-aafc-5e58eccd9d0f  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"api hub"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ip4/<IP_ADDRESS>/tcp/45132"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("Using process controll like  "),a("code",[t._v("systemmd")]),t._v(" or "),a("code",[t._v("supervisord")]),t._v(" is recommended.")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v('Pls keep the wallet unlock state. If the state is locked , it will block sealer "Waiting for confirmation".')])]),t._v(" "),a("h2",{attrs:{id:"install-venus-sealer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-venus-sealer"}},[t._v("#")]),t._v(" Install venus-sealer")]),t._v(" "),a("p",[t._v("Set evironment variable for building venus-sealer.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("RUSTFLAGS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-C target-cpu=native -g"')]),t._v(" \n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("FFI_BUILD_FROM_SOURCE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("Please make sure you use these flags "),a("code",[t._v('RUSTFLAGS="-C target-cpu=native -g" FFI_BUILD_FROM_SOURCE="1"')]),t._v(" building venus-sealer to get best performance out of your machine.")])]),t._v(" "),a("p",[t._v("Download and compile the source code of venus-sealer.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/filecoin-project/venus-sealer.git\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" venus-sealer\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("RELEASE_TAG"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" deps\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("For participants in incubation program, please use "),a("code",[t._v("incubation")]),t._v(" branch by "),a("code",[t._v("git checkout incubation")]),t._v(".")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("To recompile using latest code in "),a("code",[t._v("incuvation")]),t._v(" branch, do the following...")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" submodule update --init --recursive\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" clean\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" deps\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v("\n")])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("If you are using sealer for the 1st time, it may start to download proof parameters, which may take quite some time. If you already downloaded the proof params, use "),a("code",[t._v("TRUST_PARAMS=1")]),t._v(" to suppress downloading. If you are located in China, follow the tips "),a("a",{attrs:{href:"https://venus.filecoin.io/Tips-Running-In-China.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),a("OutboundLink")],1),t._v(" to speed up the process.")])]),t._v(" "),a("h3",{attrs:{id:"initialize-sealer-with-a-new-miner-id"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#initialize-sealer-with-a-new-miner-id"}},[t._v("#")]),t._v(" Initialize sealer with a new miner id")]),t._v(" "),a("p",[t._v("If you don't have a miner id yet, run the following command to initialize sealer. Make sure you have some funds in your "),a("code",[t._v("<OWNER_ADDRESS>")]),t._v(" to cover the gas fee needed for initing a new miner id, or init will fail.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nohup")]),t._v(" ./venus-sealer "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Choose from calibration for testnets")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Leave out this flag for mainnet")]),t._v("\n--network"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("calibration init "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--worker "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("WORKER_ADDRESS"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--owner "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("OWNER_ADDRESS"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Choose between 32G or 64G for mainnet")]),t._v("\n--sector-size"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("32GiB "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Config for different shared venus modules")]),t._v("\n--node-url"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/ip4/"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("IP_ADDRESS_OF_VENUS"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/tcp/3453 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--messager-url"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/ip4/"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("IP_ADDRESS_OF_VENUS_MESSAGER"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/tcp/"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("PORT_OF_VENUS_MESSAGER"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--gateway-url"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/ip4/"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("IP_ADDRESS_OF_VENUS_GATEWAY"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/tcp/"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("PORT_OF_VENUS_GATEWAY"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--auth-token"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("AUTH_TOKEN_FOR_VENUS_SEALER"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Flags sealer to not storing any sealed sectors on the machine it runs on")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# You can leave out this flag if you are on testnet")]),t._v("\n--no-local-storage "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" sealer.log "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n")])])]),a("p",[t._v("Expect logs close to the following indicating a successful creation of a new "),a("code",[t._v("<MINER_ID>")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-07-12T17:02:07.199+0800\tINFO\tmain\tvenus-sealer/init.go:142\tInitializing venus sealer\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-07-12T17:02:07.199+0800\tINFO\tmain\tvenus-sealer/init.go:162\tChecking proof parameters\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-07-12T17:03:35.229+0800\tINFO\tparamfetch\tgo-paramfetch@v0.0.2-0.20210614165157-25a6c7769498/paramfetch.go:207\tparameter and key-fetching complete\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-07-12T17:03:35.229+0800\tINFO\tmain\tvenus-sealer/init.go:176\tTrying to connect to full node RPC\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-07-12T17:03:35.592+0800\tINFO\tmain\tvenus-sealer/init.go:190\tChecking full node "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sync")]),t._v(" status\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-07-12T17:03:35.592+0800\tINFO\tmain\tvenus-sealer/init.go:198\tChecking "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" repo exists\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-07-12T17:03:35.592+0800\tINFO\tmain\tvenus-sealer/init.go:210\tChecking full node version\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-07-12T17:03:36.099+0800\tINFO\tmain\tvenus-sealer/init.go:226\tInitializing repo\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-07-12T17:03:36.100+0800\tINFO\tmain\tvenus-sealer/init.go:339\tInitializing libp2p identity\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-07-12T17:03:39.022+0800\tINFO\tmain\tvenus-sealer/init.go:515\tPushed CreateMiner message: 3bfd3fc8-4f8d-45c8-86e9-5fe29a02fec0\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-07-12T17:03:39.022+0800\tINFO\tmain\tvenus-sealer/init.go:516\tWaiting "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" confirmation\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-07-12T17:07:39.184+0800\tINFO\tmain\tvenus-sealer/init.go:532\tNew miners address is: "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("MINER_ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t2qgsnl5qy7sehm7u5nobkblmi2t4tuvh7flc4nqy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-07-12T17:07:39.184+0800\tINFO\tmain\tvenus-sealer/init.go:411\tCreated new miner: "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("MINER_ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-07-12T17:07:39.185+0800\tINFO\tmain\tvenus-sealer/init.go:295\tSealer successfully created, you can now start it with "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'venus-sealer run'")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("It may take couple minutes before  "),a("code",[t._v("init")]),t._v(" command finishes.")])]),t._v(" "),a("h3",{attrs:{id:"initialize-sealer-with-an-existing-miner-id"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#initialize-sealer-with-an-existing-miner-id"}},[t._v("#")]),t._v(" Initialize sealer with an existing miner id")]),t._v(" "),a("p",[t._v("If you already have a miner id, run the following command to initialize sealer. Make sure you have some funds in your "),a("code",[t._v("<OWNER_ADDRESS>")]),t._v(" to cover the gas fee, or init will fail.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ ./venus-sealer  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Choose from calibration for testnets")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Leave out this flag for mainnet")]),t._v("\n--network"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("calibration init "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--actor"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("MINER_ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Config for different shared venus modules")]),t._v("\n--node-url"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/ip4/"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("IP_ADDRESS_OF_VENUS"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/tcp/3453 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--messager-url"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/ip4/"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("IP_ADDRESS_OF_VENUS_MESSAGER"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/tcp/"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("PORT_OF_VENUS_MESSAGER"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--gateway-url"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/ip4/"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("IP_ADDRESS_OF_VENUS_GATEWAY"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/tcp/"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("PORT_OF_VENUS_GATEWAY"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--auth-token"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("AUTH_TOKEN_FOR_VENUS_SEALER"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Flags sealer to not store any sealed sectors on the machine it runs on")]),t._v("\n--no-local-storage "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" sealer.log "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n")])])]),a("p",[t._v("Expect logs close to the following.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-07T04:15:49.170+0800    INFO    main    venus-sealer/init.go:193        Checking "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" repo exists\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-07T04:15:49.170+0800    INFO    main    venus-sealer/init.go:205        Checking full node version\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-07T04:15:49.174+0800    INFO    main    venus-sealer/init.go:221        Initializing repo\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-07T04:15:49.175+0800    INFO    main    venus-sealer/init.go:334        Initializing libp2p identity\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-07T04:15:49.181+0800    INFO    main    venus-sealer/init.go:406        Created new miner: t02105\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-07T04:15:49.181+0800    INFO    main    venus-sealer/init.go:290        Sealer successfully created, you can now start it with "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'venus-sealer run'")]),t._v("\n")])])]),a("h2",{attrs:{id:"start-pledging"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#start-pledging"}},[t._v("#")]),t._v(" Start pledging")]),t._v(" "),a("p",[t._v("Run sealer.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nohup")]),t._v(" ./venus-sealer run "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" sealer.log "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n")])])]),a("p",[t._v("Attach permanent storage and sealing storage to sealer.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ ./venus-sealer storage attach --init --store "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ABSOLUTE_PATH_OF_YOUR_PERMANENT_STORAGE"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n$ ./venus-sealer storage attach --init --seal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ABSOLUTE_PATH_OF_YOUR_SEALING_STORAGE"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[a("code",[t._v("--groups / --allow-to")]),t._v(" is used to bind PC2 and PC1, see the following text for specific instructions.")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("If either path was not set correctly, sealing will fail. Check if your paths are properly setup by "),a("code",[t._v("./venus-sealer storage list")]),t._v(" , you shold get something close to following...")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("37109bd3-15cc-4821-99e8-b7af891f2e84:\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("####################***                           ] 4.82 TiB/10.39 TiB 46%")]),t._v("\n        Unsealed: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" Sealed: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" Caches: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" Reserved: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("483.2")]),t._v(" GiB\n        Weight: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" Use: Seal \n        URL: http://127.0.0.1:3456/remote "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("latency: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(".1ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nf4074188-c851-4468-820b-e138beb5f12d:\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("####################                              ] 4.348 TiB/10.39 TiB 41%")]),t._v("\n        Unsealed: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" Sealed: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" Caches: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" Reserved: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" B\n        Weight: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" Use: Seal Store\n        Local: /mnt/mount/litao/\n        URL: http://192.168.200.17:2345/remote\n")])])])]),t._v(" "),a("p",[t._v("Pledge a single sector.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ ./venus-sealer sectors pledge \n")])])]),a("p",[t._v("Congratulations! You are now pledging your 1st sector. Use "),a("a",{attrs:{href:"#sealer-commands"}},[t._v("sealer commands")]),t._v(" to monitor sealing processes and keep an eye on errors in the log.")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("If you see the following error during sealing, try "),a("code",[t._v("mv")]),t._v(" unsealed sector file under "),a("code",[t._v("~/.venussealer/unsealed/")]),t._v(" to "),a("code",[t._v("/var/tmp/s-basic-unsealed-34359738368")]),t._v(" on relevant sealer/worker box.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-09-01T10:41:10.394+0200    WARN    sectors storage-sealing/fsm.go:626      sector "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("611")]),t._v(" got error event sealing.SectorSealPreCommit1Failed: seal pre commit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" failed: storage call error "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(": The default unsealed does not exist,please copy a generated unsealed "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" to /var/tmp/s-basic-unsealed-34359738368\n")])])]),a("p",[t._v("We recommend preparing these files in advance for each worker machine,filename rules:")]),t._v(" "),a("ul",[a("li",[t._v("s-basic-unsealed-"),a("em",[a("strong",[t._v("SectorSize")])])]),t._v(" "),a("li",[t._v("s-piece-infos-"),a("em",[a("strong",[t._v("SectorSize")])])])]),t._v(" "),a("p",[t._v("SectorSize options: 2048,8388608,536870912,34359738368,68719476736. The corresponding filename can be created according to the SectorSize corresponding to the minerID,eg. 32G:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("/var/tmp/s-piece-infos-34359738368\n/var/tmp/s-basic-unsealed-34359738368\n")])])]),a("p",[t._v("s-piece-infos-"),a("em",[a("strong",[t._v("SectorSize")])]),t._v(" content corresponding to different SectorSize:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('# 32G\n[{"Size":34359738368,"PieceCID":{"/":"baga6ea4seaqao7s73y24kcutaosvacpdjgfe5pw76ooefnyqw4ynr3d2y6x2mpq"}}]\n\n# 8M\n[{"Size":8388608,"PieceCID":{"/":"baga6ea4seaqgl4u6lwmnerwdrm4iz7ag3mpwwaqtapc2fciabpooqmvjypweeha"}}]\n\n# 512M\n[{"Size":536870912,"PieceCID":{"/":"baga6ea4seaqdsvqopmj2soyhujb72jza76t4wpq5fzifvm3ctz47iyytkewnubq"}}]\n\n# 2k\n[{"Size":2048,"PieceCID":{"/":"baga6ea4seaqpy7usqklokfx2vxuynmupslkeutzexe2uqurdg5vhtebhxqmpqmy"}}]\n\n# 64G\n[{"Size":68719476736,"PieceCID":{"/":"baga6ea4seaqomqafu276g53zko4k23xzh4h4uecjwicbmvhsuqi7o4bhthhm4aq"}}]\n')])])])]),t._v(" "),a("h2",{attrs:{id:"sealer-commands"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sealer-commands"}},[t._v("#")]),t._v(" Sealer Commands")]),t._v(" "),a("p",[t._v("Check ongoing sealing job.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ ./venus-sealer sealing workers\n$ ./venus-sealer sealing "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("jobs")]),t._v("\n")])])]),a("p",[t._v("Check the sector state.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ ./venus-sealer sectors list\n$ ./venus-sealer sectors status --log "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("SECTOR_NUMBER"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("If a sector got stuck in one status for too long, you might want to consider removing them. More on "),a("a",{attrs:{href:"https://github.com/filecoin-project/lotus/discussions/6950",target:"_blank",rel:"noopener noreferrer"}},[t._v("how to terminate"),a("OutboundLink")],1),t._v(" if remove fails.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Sector State: Removing -> RemoveFailed/Removed")]),t._v("\n$ ./venus-sealer sectors remove --really-do-it "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("SECTOR_NUMBER"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Sector State: Terminating -> TerminateWait -> TerminateFinality/TerminateFailed")]),t._v("\n$ ./venus-sealer sectors terminate --really-do-it "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("SECTOR_NUMBER"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("Removing a sector could take quite some time. Monitor sector state and retry remove commands if necessary.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ ./venus-sealer sectors list\nID  State       OnChain  Active  Expiration                    Deals\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("   Proving     YES      YES     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2513094")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("in "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" year "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(" weeks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  CC\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("   Removed     NO       NO      n/a                           CC\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("   PreCommit1  NO       NO      n/a                           CC\n")])])]),a("p",[t._v("Config MaxSealingSectors to limit maximum number of sectors in parallel.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" ~/.venussealer/config.toml \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Sealing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n  MaxSealingSectors "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# actual number varies from system to system")]),t._v("\n")])])]),a("p",[t._v("Config which address to drain during sealing in "),a("code",[t._v("~/.venussealer/config.toml")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-toml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-toml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Addresses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("PreCommitControl")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# P2")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("CommitControl")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# C2")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("DisableOwnerFallback")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("DisableWorkerFallback")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" \n")])])]),a("h2",{attrs:{id:"finding-optimal-configurations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#finding-optimal-configurations"}},[t._v("#")]),t._v(" Finding optimal configurations")]),t._v(" "),a("p",[t._v("Now that you sucessfully pledged your 1st sector, finding optimal configurations for your storage system is crucial for further growth of power. As venus-sealer functions exactly like lotus-miner, resources for scaling cluster and optimization for lotus can be directly applied to venus-sealer. We recommend that you go through this "),a("a",{attrs:{href:"https://github.com/filecoin-project/lotus/discussions/6071",target:"_blank",rel:"noopener noreferrer"}},[t._v("hardware list"),a("OutboundLink")],1),t._v(" by minerX and this "),a("a",{attrs:{href:"https://github.com/filecoin-project/lotus/discussions/5989",target:"_blank",rel:"noopener noreferrer"}},[t._v("tutorial"),a("OutboundLink")],1),t._v(" for advanced tips.")]),t._v(" "),a("p",[t._v("To scale your growth, you can run venus-worker to handle different stages of the sealing process (AP, P1, P2, C2 and etc). Even for a single box setup, it is recommended that you run both venus-sealer and venus-worker to gurantee the stability of your stroage system by having sealer do windowPost solely, or sealing jobs may compete with windowPost for resources which may result in "),a("a",{attrs:{href:"https://docs.filecoin.io/mine/lotus/seal-workers/#miner-and-worker-co-location",target:"_blank",rel:"noopener noreferrer"}},[t._v("a failed windowPost"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"using-venus-worker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-venus-worker"}},[t._v("#")]),t._v(" Using venus-worker")]),t._v(" "),a("p",[t._v("Change "),a("code",[t._v("[Storage]")]),t._v(" section of "),a("code",[t._v("~/.venussealer/config.toml")]),t._v(" to the following.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Storage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  ParallelFetchLimit "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n  AllowAddPiece "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  AllowPreCommit1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n  AllowPreCommit2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n  AllowCommit "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n  AllowUnseal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])])]),a("p",[t._v("Save and restart venus-sealer for the config to take into effect. Then collect sealer url and token.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" ~/.venussealer/api\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("SEALER_URL"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" ~/.venussealer/token\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("SEALER_TOKEN"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("Run venus-worker.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("TRUST_PARAMS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nohup")]),t._v(" ./venus-worker run "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--miner-addr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/ip4/"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("IP_ADDRESS_OF_VENUS_SEALER"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/tcp/"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("PORT_OF_VENUS_SEALER"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" \n--miner-token"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("SEALER_TOKEN"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--listen"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:345"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("8")]),t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" \n--addpiece "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" worker.log "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("                   \n")])])]),a("p",[t._v("Other worker flags of interests.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("--addpiece\t\t"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" addpiece "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n--precommit1\t"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" precommit1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("32G sectors: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" core, 128GiB RAM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n--unseal\t\t\t"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" unsealing "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("32G sectors: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" core, 128GiB RAM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n--precommit2\t"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" precommit2 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("32G sectors: multiple cores, 96GiB RAM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n--commit\t\t\t"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" commit "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("32G sectors: multiple cores or GPUs, 128GiB RAM + 64GiB swap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n--task-total\ttotal number of task "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("--task-total limits the total number of tasks being executed by the worker.")])]),t._v(" "),a("p",[t._v("Attach sealing storage to worker. (Path for permanent storage will be inherited from sealer)")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ ./venus-worker storage attach --init --seal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ABSOLUTE_PATH_OF_YOUR_SEALING_STORAGE"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[a("code",[t._v("--groups / --allow-to")]),t._v(" is used to bind PC2 and PC1, see the following text for specific instructions.")])]),t._v(" "),a("p",[t._v("Check if your worker is connected.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ ./venus-sealer storage list\n")])])]),a("h3",{attrs:{id:"storage-groups"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#storage-groups"}},[t._v("#")]),t._v(" Storage groups")]),t._v(" "),a("p",[a("code",[t._v("--groups / --allow-to")]),t._v(" is used for "),a("code",[t._v("venus-sealer/venus-worker storage attach")]),t._v(" command, allow for creating worker groups, and avoiding unnecesarily moving data between multi-purpose workers. For example in the following setup:")]),t._v(" "),a("ul",[a("li",[t._v("venus-sealer\n"),a("ul",[a("li",[t._v('Path with Groups: ["example-storage-group-1"]')])])]),t._v(" "),a("li",[t._v("venus-worker 1 (PC1, PC2):\n"),a("ul",[a("li",[t._v('Path with Groups: ["example-seal-group-1"], AllowTo: ["example-seal-group-1"]')])])]),t._v(" "),a("li",[t._v("venus-worker 2 (PC1, PC2):\n"),a("ul",[a("li",[t._v('Path with Groups: ["example-seal-group-2"], AllowTo: ["example-seal-group-2"]')])])]),t._v(" "),a("li",[t._v("venus-worker 3 (PC1):\n"),a("ul",[a("li",[t._v('Path with AllowTo: ["example-seal-group-1"]')])])])]),t._v(" "),a("p",[t._v("Without storage groups, PC2 tasks on workers 1/2 could be scheduled with sector data from other workers, which would often waste bandwidth and occasionally block processing on fetching data.")]),t._v(" "),a("p",[t._v("With storage groups configured as above, sectors which had PC1 done on worker1 / worker2 will always execute PC2 on the same worker. Sectors from worker3 will only go to worker1 for PC2.")]),t._v(" "),a("p",[t._v("Groups can be setup in two ways:")]),t._v(" "),a("ul",[a("li",[t._v("For now storage paths, when using the storage attach --init command with the new --groups / --allow-to flags.")]),t._v(" "),a("li",[t._v("For existing storage paths - by modifying [path]/sectorstore.json, then restarting venus-miner/venus-worker.")])]),t._v(" "),a("p",[t._v("Groups:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('{\n  "ID": "74e1d667-7bc9-49bc-a9a6-0c30afd8684c",\n  "Weight": 10,\n  "CanSeal": false,\n  "CanStore": true,\n  "MaxStorage": 0,\n  "Groups": ["storage0"]\n}\n')])])]),a("p",[t._v("AllowTo:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('{\n  "ID": "54f090bf-9fa9-4a47-9f67-0cc4f24c810e",\n  "Weight": 10,\n  "CanSeal": true,\n  "CanStore": false,\n  "AllowTo": ["storage0"]\n}\n')])])]),a("ul",[a("li",[t._v("How to make the worker (PC2) of the same machine only receive the sector task completed by PC1 on the machine?\n"),a("ul",[a("li",[t._v("Set the same "),a("code",[t._v("--groups")]),t._v(" and "),a("code",[t._v("--allow-to")]),t._v(" for storage of all workers on the same machine.")]),t._v(" "),a("li",[t._v("Set the same "),a("code",[t._v("seal")]),t._v(" storage directory for storage of all workers on the same machine.")])])])]),t._v(" "),a("h3",{attrs:{id:"multiple-worker-processes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#multiple-worker-processes"}},[t._v("#")]),t._v(" Multiple worker processes")]),t._v(" "),a("p",[t._v("If you are running multiple worker processes on the same box, each worker need to set their own "),a("code",[t._v("TMPDIR")]),t._v(" environment variable or sealing process may run into race condition.")]),t._v(" "),a("p",[t._v("Additionally, worker processes on same box will neep different repo path, which can be configured by using "),a("code",[t._v("--repo")]),t._v(" flag.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("TRUST_PARAMS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nohup")]),t._v(" ./venus-worker --repo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("REPO_PATH"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" run "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--miner-addr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/ip4/"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("IP_ADDRESS_OF_VENUS_SEALER"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/tcp/"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("PORT_OF_VENUS_SEALER"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n--miner-token"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("SEALER_TOKEN"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--listen"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:345"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("8")]),t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" worker.log "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" \n")])])]),a("h3",{attrs:{id:"misc-optimizations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#misc-optimizations"}},[t._v("#")]),t._v(" Misc optimizations")]),t._v(" "),a("p",[t._v("Increase your open file limit")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("ulimit")]),t._v(" -n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1048576")]),t._v("\n")])])]),a("p",[t._v("Environment variable for potential faster sealing speed.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("FIL_PROOFS_PARAMETER_CACHE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/fast/disk/folder1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# > 100GiB!")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("FIL_PROOFS_PARENT_CACHE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/fast/disk/folder2    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# > 50GiB!")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("TMPDIR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/fast/disk/folder3    \t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# used when sealing")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" MINER_API_INFO:"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("TOKEN"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":/ip4/"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("miner_api_address"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/tcp/"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/http`\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("BELLMAN_CPU_UTILIZATION")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.875")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# optimal value depends on exact hardware")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("FIL_PROOFS_MAXIMIZE_CACHING")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("FIL_PROOFS_USE_GPU_COLUMN_BUILDER")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# when GPU is available")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("FIL_PROOFS_USE_GPU_TREE_BUILDER")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# when GPU is available")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The following increases speed of PreCommit1 at the cost of using a full")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CPU core-complex rather than a single core.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# See https://github.com/filecoin-project/rust-fil-proofs/ and the")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# "Worker co-location" section below.')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("FIL_PROOFS_USE_MULTICORE_SDR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),a("p",[t._v("venus-woker can take advantage of two GPU devices on the same box with the configurable environment variables.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CUDA_VISIBLE_DEVICES")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# use only device1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CUDA_VISIBLE_DEVICES")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0,1")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# use both device0 and device1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CUDA_VISIBLE_DEVICES")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0,1"')]),t._v("\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# same as above use device0 and device1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CUDA_VISIBLE_DEVICES")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0,2")]),t._v(",3   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# use device0, device2 and device3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CUDA_VISIBLE_DEVICES")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2,0")]),t._v(",3   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# use device0, device2 and device3")]),t._v("\n")])])]),a("p",[t._v("Increase GPU RAM usage. (Default FIL_PROOFS_MAX_GPU_COLUMN_BATCH_SIZE=400000, FIL_PROOFS_MAX_GPU_TREE_BATCH_SIZE=700000)")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Recommended")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("FIL_PROOFS_MAX_GPU_COLUMN_BATCH_SIZE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8000000")]),t._v(",FIL_PROOFS_MAX_GPU_TREE_BATCH_SIZE"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8000000")]),t._v("\n")])])]),a("p",[t._v("There are different ways of using environment variables. For example, if we want to allow multi core SDR, we can do either of the following.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# one way of setting env variable")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("FIL_PROOFS_USE_MULTICORE_SDR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nohup")]),t._v(" ./venus-sealer run "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" sealer.log "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# the other way of setting env variable")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("FIL_PROOFS_USE_MULTICORE_SDR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nohup")]),t._v(" ./venus-worker run "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" worker.log "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n")])])]),a("h2",{attrs:{id:"migration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#migration"}},[t._v("#")]),t._v(" Migration")]),t._v(" "),a("p",[t._v("There are two ways to migrate from Lotus to Venus: 1) switch to venus-sealer and connect to a hosted chain services, or 2) switch to a "),a("a",{attrs:{href:"https://venus.filecoin.io/advanced/",target:"_blank",rel:"noopener noreferrer"}},[t._v("venus-ready lotus-miner"),a("OutboundLink")],1),t._v(" and connect to a hosted chain service.")]),t._v(" "),a("h3",{attrs:{id:"switching-to-venus-sealer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#switching-to-venus-sealer"}},[t._v("#")]),t._v(" Switching to venus-sealer")]),t._v(" "),a("p",[t._v("Wait till lotus-miner to finish up existing sealing jobs and make sure you have enough time before your next windowPost deadline, then take the following steps:")]),t._v(" "),a("ol",[a("li",[t._v("Stop lotus-miner as both lotus-miner and venus-sealer use port 2345 by default.")]),t._v(" "),a("li",[t._v("Init venus-sealer with your miner id with "),a("code",[t._v("--actor")]),t._v(" flag along with other configuration flags. For example,  --actor=f0***.")]),t._v(" "),a("li",[t._v("After initialization of venus-sealer, use "),a("code",[t._v("venus-sealer storage attach --store")]),t._v(" to specify path for permanent storage, ie. what you used for ${lotus-miner store}.")]),t._v(" "),a("li",[t._v("Import sectors from lotus-miner to venus-sealer and set sector nextid to the plus one of latest sealed sector id by executing the following. You can change repo paths in the command accordingly.")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("./lotus-convert -lotus-miner-repo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/root/.lotusminer/ -venus-sealer-repo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/root/.venussealer -taskType"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("lotus-convert is a utility tool for migrating from lotus to venus.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# taskType=0; manually change nextid")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# set nextid to 300 with -sid flag")]),t._v("\n./lotus-convert -lotus-miner-repo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/root/.lotusminer/ -venus-sealer-repo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/root/.venussealer -taskType"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" -sid"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# taskType=1; import sectors from lotus-miner to venus-sealer")]),t._v("\n./lotus-convert -lotus-miner-repo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/root/.lotusminer/ -venus-sealer-repo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/root/.venussealer -taskType"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# taskType=2; atuo change nextid and import sectors from lotus-miner to venus-sealer")]),t._v("\n./lotus-convert -lotus-miner-repo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/root/.lotusminer/ -venus-sealer-repo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/root/.venussealer -taskType"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])])]),t._v(" "),a("h2",{attrs:{id:"questions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#questions"}},[t._v("#")]),t._v(" Questions?")]),t._v(" "),a("p",[t._v("Find us on "),a("a",{attrs:{href:"https://filecoinproject.slack.com/archives/CEHHJNJS3",target:"_blank",rel:"noopener noreferrer"}},[t._v("Slack"),a("OutboundLink")],1),t._v("!")])])}),[],!1,null,null,null);s.default=n.exports}}]);